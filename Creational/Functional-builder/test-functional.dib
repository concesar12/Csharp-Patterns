#!meta

{"kernelInfo":{"defaultKernelName":"csharp","items":[{"aliases":[],"languageName":"csharp","name":"csharp"}]}}

#!csharp

#r "nuget:Microsoft.DotNet.Interactive.ExtensionLab,*-*"

using System;
using System.Collections.Generic;

public class Person
{
    public string Name, Position;
}

public sealed class PersonBuilder
{
    public readonly List<Action<Person>> Actions = new List<Action<Person>>();

    public PersonBuilder Called(string name)
    {
        Actions.Add(p => { p.Name = name; });
        return this;
    }

    public Person Build()
    {
        var p = new Person();
        Actions.ForEach(a => a(p));
        return p;
    }
}

#!csharp

// Define PersonBuilderExtensions in a separate top-level static class
public static class PersonBuilderExtensions
{
    public static PersonBuilder WorksAsA(this PersonBuilder builder, string position)
    {
        builder.Actions.Add(p =>
        {
            p.Position = position;
        });
        return builder;
    }
}

#!csharp

 public class FunctionalBuilder
 {
       var pb = new PersonBuilder();
       var person = pb.Called("Dmitri").WorksAsA("Programmer").Build();
       Console.WriteLine($"Name: {person.Name}, Position: {person.Position}");
 }        
